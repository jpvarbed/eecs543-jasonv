Include: person.2apl

BeliefUpdates:
  { bomb(X,Y) }         RemoveBomb(X,Y) { not bomb(X,Y) }
  {sallyAt(A,B)}		DropSally(A,B) { not sallyAt(A,B)}
	{ trapExists(A,B) }      AddBomb(X,Y)    { bomb(X,Y) }
	{ true }		AddTrap(X,Y) { trapExists(X,Y)}
	{true} 		AddSally(X,Y)	{sallyAt(X,Y)}
	{trapExists(A,B)} DropTrap() {not trapExists(A,B)}
	{ carry( bomb ) }     Drop( )         { not carry( bomb ) }
  { not carry( bomb ) } PickUp( )       { carry( bomb ) }

Beliefs:
  start(0,1).
  clean( blockWorld ) :- not bomb(X,Y) , not carry(bomb).

Plans:
  B(start(X,Y)) ;
  @blockworld( associateWith(robot0), _ );
  @blockworld( enter( X, Y, blue ), _ )

Goals:
  clean( blockWorld ),
  follow( blockWorld)
 
PG-rules:
  clean( blockWorld ) <- bomb( X, Y ) and trapExists(A, B)|
  {
    goto( X, Y );
    @blockworld( pickup( ), _ );
		PickUp( );
		RemoveBomb( X, Y );
    goto( A, B );
		@blockworld( drop( ), _ );
    Drop( )
	}
follow(blockWorld) <- sallyAt(X,Y) and not bomb(X1,Y1) and not carry(bomb)|
{
	@blockworld( sensePosition(), POS );
    B(POS = [actionresult([A,B])]);
    if B(A > X) then
    { @blockworld( west(), L )

    }
    else if B(A < X) then
    { @blockworld( east(), L )

    }
    else if B(B > Y) then
    { @blockworld( north(), L )

    }
    else if B(B < Y) then
    { @blockworld( south(), L )

    }
}

PC-rules:
  message( sally, inform, La, On, bombAt( X, Y ) ) <- true |
  {   
	if B(trapExists(X,Y)) then
	{
		DropTrap()
	};
	  if B( not bomb( A, B ) ) then
    { AddBomb( X, Y );
		  adoptz( clean( blockWorld ) )
    }
    else
		{ AddBomb( X, Y )
		}
	}
	  message( jill, inform, La, On, bombAt( X, Y ) ) <- true |
  {   
	if B(trapExists(X,Y)) then
	{
		DropTrap()
	};
	  if B( not bomb( A, B ) ) then
    { AddBomb( X, Y );
		  adoptz( clean( blockWorld ) )
    }
    else
		{ AddBomb( X, Y )
		}
	}
 message( sally, inform, La, On, sallyAt( X, Y ) ) <- true |
  {   
	if B(trapExists(A,B) and not sallyAt(A,B)) then
	{
		AddSally(X,Y);
		adoptz(follow(blockWorld))
	}
	else if B(trapExists(A,B)) then
	{
		DropSally(A,B);
		AddSally(X,Y)
	}
  }
  message( jack, inform, La, On, trapAt( X, Y ) ) <- true |
  {   
	  if B( not trapExists( A, B ) ) then
    { AddTrap( X, Y )
    }
}

PR-rules:
  @blockworld( pickup(), _ ); REST <- true |
  {
    @blockworld( sensePosition(), POS );
    B(POS = [actionresult([X,Y])]);
    RemoveBomb( X, Y )
  }
  @blockworld(drop(), _); REST <- true|
  {
	DropTrap()
  }